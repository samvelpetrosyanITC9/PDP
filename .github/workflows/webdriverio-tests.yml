name: WebdriverIO Tests

on:
  schedule:
    - cron: '0 0 * * 1'
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: WebdriverIO/package-lock.json

    - name: Install Chrome
      run: |
        wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable

    - name: Get Chrome version
      id: chrome-version
      run: |
        CHROME_VERSION=$(google-chrome --version | awk '{print $3}' | cut -d'.' -f1)
        echo "CHROME_VERSION=$CHROME_VERSION" >> $GITHUB_ENV
        echo "Chrome version: $CHROME_VERSION"

    - name: Setup WebdriverIO directory
      run: |
        cd WebdriverIO
        npm cache clean --force
        rm -rf node_modules package-lock.json logs allure-results allure-report mochawesome-report

    - name: Install dependencies
      run: |
        cd WebdriverIO
        npm install
        npm install chromedriver@${{ env.CHROME_VERSION }} --save-dev
        npm install @babel/core @babel/register --save-dev
      env:
        NODE_ENV: development

    - name: Verify installations
      run: |
        cd WebdriverIO
        echo "Node version: $(node --version)"
        echo "NPM version: $(npm --version)"
        echo "ChromeDriver version: $(npx chromedriver --version)"
        echo "Chrome version: $(google-chrome --version)"
        echo "Current directory: $(pwd)"
        echo "Directory contents: $(ls -la)"
        echo "Package.json contents: $(cat package.json)"

    - name: Create logs directory
      run: |
        cd WebdriverIO
        mkdir -p logs

    - name: Run WebdriverIO tests
      run: |
        cd WebdriverIO
        DEBUG=* npm run test:debug
      env:
        CI: true
        NODE_ENV: test
        DEBUG: "*"
        WDIO_LOG_LEVEL: "debug"
        WDIO_TIMEOUT: "30000"
        WDIO_RETRIES: "1"
        CHROME_BIN: "/usr/bin/google-chrome"
        CHROMEDRIVER_PATH: "./node_modules/.bin/chromedriver"

    - name: Upload test logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-logs
        path: |
          WebdriverIO/logs/
          WebdriverIO/allure-results/
          WebdriverIO/mochawesome-report/
        retention-days: 30

    - name: Generate Allure Report
      if: always()
      run: |
        cd WebdriverIO
        npm install -g allure-commandline
        allure generate allure-results --clean

    - name: Upload Allure Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: allure-report
        path: WebdriverIO/allure-report/
        retention-days: 30

    - name: Generate Mochawesome Report
      if: always()
      run: |
        cd WebdriverIO
        npx mochawesome-merge mochawesome-report/*.json > mochawesome-report/merged-report.json
        npx mochawesome-report-generator mochawesome-report/merged-report.json

    - name: Upload Mochawesome Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: mochawesome-report
        path: WebdriverIO/mochawesome-report/
        retention-days: 30